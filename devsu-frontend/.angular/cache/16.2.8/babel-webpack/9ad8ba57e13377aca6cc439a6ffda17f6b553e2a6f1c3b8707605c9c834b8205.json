{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/client.service\";\nexport class ClientComponent {\n  constructor(clientService) {\n    this.clientService = clientService;\n  }\n  ngOnInit() {\n    this.fetchAllClients();\n  }\n  fetchAllClients() {\n    this.clientService.getAllClients().subscribe(data => {\n      this.springData = data;\n    });\n  }\n  static #_ = this.ɵfac = function ClientComponent_Factory(t) {\n    return new (t || ClientComponent)(i0.ɵɵdirectiveInject(i1.ClientService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClientComponent,\n    selectors: [[\"app-client\"]],\n    decls: 2,\n    vars: 0,\n    template: function ClientComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"client works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ClientComponent","constructor","clientService","ngOnInit","fetchAllClients","getAllClients","subscribe","data","springData","_","i0","ɵɵdirectiveInject","i1","ClientService","_2","selectors","decls","vars","template","ClientComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Santiago Collazos\\Documents\\devsu-frontend\\devsu-bank\\src\\app\\client\\client.component.ts","C:\\Users\\Santiago Collazos\\Documents\\devsu-frontend\\devsu-bank\\src\\app\\client\\client.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\nimport { ClientService } from '../services/client.service';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent {\n\n  springData: string;\n\n  constructor(private clientService: ClientService) { }\n\n  ngOnInit(): void {\n    this.fetchAllClients();\n  }\n\n  fetchAllClients() {\n      this.clientService.getAllClients().subscribe(data => {\n          this.springData = data;\n      });\n  }\n\n}\n","<p>client works!</p>\n"],"mappings":";;AASA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;EAAmB;EAEpDC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAeA,CAAA;IACX,IAAI,CAACF,aAAa,CAACG,aAAa,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAChD,IAAI,CAACC,UAAU,GAAGD,IAAI;IAC1B,CAAC,CAAC;EACN;EAAC,QAAAE,CAAA,G;qBAdUT,eAAe,EAAAU,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfd,eAAe;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT5BV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,oBAAa;QAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}