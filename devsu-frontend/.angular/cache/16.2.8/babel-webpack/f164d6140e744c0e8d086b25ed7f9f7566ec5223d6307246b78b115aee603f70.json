{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ClientService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = 'http:localhost:8080/cliente/';\n  }\n  getAllClients() {\n    return this.http.get(this.apiUrl).pipe(map(response => response));\n  }\n  static #_ = this.ɵfac = function ClientService_Factory(t) {\n    return new (t || ClientService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientService,\n    factory: ClientService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","ClientService","constructor","http","router","apiUrl","getAllClients","get","pipe","response","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Santiago Collazos\\Documents\\devsu-frontend\\devsu-bank\\src\\app\\services\\client.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Client } from '../client/cliente';\nimport { map, catchError } from 'rxjs/operators';\n\n\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  private apiUrl = 'http:localhost:8080/cliente/'; \n\n  constructor(private http: HttpClient,  private router: Router) { }\n\n  getAllClients(): Observable<Client[]> {\n    return this.http.get(this.apiUrl).pipe(\n  \t\tmap( response => response as Client[])\n  \t\t);\n  }\n}\n\n"],"mappings":"AAKA,SAASA,GAAG,QAAoB,gBAAgB;;;;AAShD,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAgB,EAAWC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAF7C,KAAAC,MAAM,GAAG,8BAA8B;EAEkB;EAEjEC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CACtCR,GAAG,CAAES,QAAQ,IAAIA,QAAoB,CAAC,CACrC;EACH;EAAC,QAAAC,CAAA,G;qBAVUT,aAAa,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbhB,aAAa;IAAAiB,OAAA,EAAbjB,aAAa,CAAAkB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}